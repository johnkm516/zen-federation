version: '3.7'

services:
  pgadmin:
    image: zen/pgadmin4:latest
    hostname: pgadmin
    container_name: pgadmin
    build:
      context: ./
      dockerfile: ./deploy/postgres/Dockerfile
      args:
        PGADMIN_EMAIL: ${PGADMIN_EMAIL}
    environment:
      PGADMIN_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}

    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - postgres-network
    restart: always

  apollo-router:
    image: ghcr.io/apollographql/router:v1.4.0
    container_name: apollo-router
    environment:
      APOLLO_GRAPH_REF: ${APOLLO_GRAPH_REF}
      APOLLO_KEY: ${APOLLO_KEY}
      AUTH_API_PORT: ${AUTH_API_PORT}
    network_mode: bridge
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 4000:4000
    volumes:
      - ./router-dev.yaml:/dist/config/router.yaml

  postgres-auth-api:
    image: postgres:14
    container_name: postgres-auth-api
    restart: always
    environment:
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_DB: ${AUTH_PGDATABASE}
    volumes:
      - postgres-auth-api:/var/lib/postgresql/data
    ports:
      - ${AUTH_PGDATABASE_PORT}:5432
    networks:
      - postgres-network
  postgres-products:
    image: postgres:14
    container_name: postgres-products
    restart: always
    environment:
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_DB: ${PRODUCTS_PGDATABASE}
    volumes:
      - postgres-products:/var/lib/postgresql/data
    ports:
      - ${PRODUCTS_PGDATABASE_PORT}:5432
    networks:
      - postgres-network

volumes:
  postgres-auth-api:
  pgadmin:
  postgres-products:
networks:
  postgres-network:
    driver: bridge
    name: postgres-network
